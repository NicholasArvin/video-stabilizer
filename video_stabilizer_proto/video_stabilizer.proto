syntax = "proto3";

package video_stabilizer;

service VideoStabilizer {
 rpc Stabilize(StabilizeRequest) returns (StabilizeResponse) {}
}

message StabilizeRequest {
oneof frame_image_oneof { // do this for all bytes 
   bytes frame_image = 1;
   string frame_image_url = 2;
   // respect reference = 3;
}
oneof prev_frame_oneof {
   bytes prev_frame = 4;
   string prev_frame_url = 5;
   // respect reference = 6;
}
oneof features_oneof {
   bytes features = 7;
   string features_url = 8;
   // respect reference = 9;
}
oneof trajectory_oneof {
   bytes trajectory = 10;
   string trajectory_url = 11;
   // respect reference = 12;
}
 int32 padding = 13;
 oneof transforms_oneof {
   bytes transforms = 14;
   string transforms_url = 15;
   // respect reference = 16;
}
 int32 frame_index = 17;
 int32 radius = 18;
 int32 next_to_send = 19;
}

message StabilizeResponse { // same as stabilize request
 oneof final_transform_oneof {
   bytes final_transform = 1;
   string final_transform_url = 2;
   // respect reference = 3;
}
 oneof features_oneof {
   bytes features = 4;
   string features_url = 5;
   // respect reference = 6;
}
 oneof trajectory_oneof {
   bytes trajectory = 7;
   string trajectory_url = 8;
   // respect reference = 9;
}
 oneof transforms_oneof {
   bytes transforms = 10;
   string transforms_url = 11;
   // respect reference = 12;
}
 int32 next_to_send = 13;
}

service Flow {
 rpc Flow(FlowRequest) returns (FlowResponse) {}
}

message FlowRequest {
 oneof prev_frame_oneof {
   bytes prev_frame = 1;
   stringe prev_frame_url = 2;
   // respect reference = 3;
}
 oneof frame_image_oneof { // do this for all bytes 
   bytes frame_image = 4;
   string frame_image_url = 5;
   // respect reference = 6;
}
 oneof features_oneof {
   bytes features = 7;
   string features_url = 8;
   // respect reference = 9;
 }
}

message FlowResponse {
  oneof transform_oneof {
   bytes transform = 1;
   string transform_url = 2;
   // respect reference = 3;
 }
 oneof features_oneof {
   bytes features = 4;
   string features_url = 5;
   // respect reference = 6;
 }
}

service CumSum {
 rpc CumSum(CumSumRequest) returns (CumSumResponse) {}
}

message CumSumRequest {
 oneof trajectory_element_oneof {
   bytes trajectory_element = 1;
   string trajectory_element_url = 2;
   // respect reference = 3;
 }
 oneof transform_oneof {
   bytes transform = 4;
   string transform_url = 5;
   // respect reference = 6;
 }
}

message CumSumResponse {
 oneof sum_oneof {
   bytes sum = 1
   string sum_url = 2;
   // respect reference = 3;
 }
}

service Smooth {
 rpc Smooth(SmoothRequest) returns (SmoothResponse) {}
}

message SmoothRequest {
 oneof transforms_element_oneof {
   bytes transforms_element = 14;
   string transforms_element_url = 15;
   // respect reference = 16;
}
 oneof trajectory_element_oneof {
   bytes trajectory_element = 1;
   string trajectory_element_url = 2;
   // respect reference = 3;
 }
 oneof trajectory_oneof {
   bytes trajectory = 1;
   string trajectory_url = 2;
   // respect reference = 3;
 }
}

message SmoothResponse {
 oneof final_transform_oneof {
   bytes final_transform = 1;
   string final_transform_url = 2;
   // respect reference = 3;
 }
}